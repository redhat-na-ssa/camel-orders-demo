---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/managed-by: quarkus
  name: mysql
  namespace: user1-camel-orders
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mysql-view
  namespace: user1-camel-orders
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: view
subjects:
  - kind: ServiceAccount
    name: mysql
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/managed-by: quarkus
  name: mysql
  namespace: user1-camel-orders
spec:
  ports:
    - name: http
      port: 3306
      protocol: TCP
      targetPort: 3306
  selector:
    app.kubernetes.io/name: mysql
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/managed-by: quarkus
  name: mysql
  namespace: user1-camel-orders
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql
        app.kubernetes.io/managed-by: quarkus
    spec:
      containers:
        - env:
            - name: MYSQL_USER
              value: mysql
            - name: MYSQL_PASSWORD
              value: mysql
            - name: MYSQL_DATABASE
              value: sampledb
            - name: MYSQL_ROOT_PASSWORD
              value: Abcd1234
          image: quay.io/jbride/mysql:8.0.33
          imagePullPolicy: Always
          name: mysql
          ports:
            - containerPort: 3306
              name: http
              protocol: TCP
          livenessProbe:
            exec:
              command: ["mysqladmin", "ping"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              # Check we can execute queries over TCP (skip-networking is off).
              command: ["mysql", "-h", "127.0.0.1", "-u", "root", "--password=Abcd1234", "-e", "SELECT 1"]
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 1
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name: config
              readOnly: false
      serviceAccountName: mysql
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: a_import.sql
                path: a_import.sql
              - key: b_data.sql
                path: b_data.sql
            name: mysql
            optional: false
          name: config
